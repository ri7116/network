꼭 알아야 하는 개념
1. 이번 장에서는 네트워크 프로그래밍, 즉 실제 구현했을 때 어떻게 동작하는지의 관점에서 바라본다.
2. Socket의 의미
3. 프로토콜 표준에서 정의한 소켓과는 어떤 차이가 있는지 

<프로토콜, ip address, port number>
소켓: 애플리케이션이 시스템의 기능을 함부로 쓸 순 없다. 대신 시스템은 애플리케이션이 네트워크 기능을 사용할 수 있도록 프로그래밍 인터페이스를 제공한다. 애플리케이션은 소켓을 통해 데이터를 주고 받는다.
개발자는 소켓 프로그래밍을 통해 네트워크 상의 다른 프로세스와 데이터를 주고 받을 수 있도록 구현한다.

실제 구현에서 TCP는 ip address와 port number만으로 유니크하게 소켓이 식별되지 않는다.(UDP는 가능) => 모든 포트를 다 사용하면 OS단에서 중복된 포트를 할당해 다른 소켓이 같은 IP와 포트넘버 사용.
실제 구현에서 TCP는 ip address와 port number만으로 유니크하게 커넥션은 식별된다!

TCP는 어떤 원리?
1. 커넥션 연결 요청이 처음! => 리스닝 소켓으로 
2. 커넥션이 성립된 이후 => <ip, port, ip , port>로 소켓 식별

포트넘버
1. 0~1023 잘 알려진 포트
2. 1024~49151 IANA에 등록된 번호 
3. 나머지는 등록 안 된 번호

